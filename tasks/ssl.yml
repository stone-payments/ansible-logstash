---
- name: ssl | ensure Logstash SSL key pair directory exists
  file:
    path: "{{ logstash_ssl_path }}"
    state: directory

- name: ssl | check if logstash.crt exists
  stat:
    path: "{{ logstash_ssl_path }}/logstash.crt"
  register: stat_result

- block:
    - name: ssl | create SSL temp directory
      file:
        path: "{{ item | dirname }}"
        recurse: true
        state: directory
      with_items:
        - "{{ logstash_ssl_cert_file }}"
        - "{{ logstash_ssl_key_file }}"
      delegate_to: localhost

    - name: ssl | generate an OpenSSL private key.
      openssl_privatekey:
        path: "{{ logstash_ssl_key_file }}"
      delegate_to: localhost

    - name: Generate an OpenSSL CSR.
      openssl_csr:
        path: "{{ logstash_ssl_cert_file | dirname }}/logstash.csr"
        privatekey_path: "{{ logstash_ssl_key_file }}"
      delegate_to: localhost

    - name: ssl | generate new SSL key and cert
      openssl_certificate:
        path: "{{ logstash_ssl_cert_file }}"
        privatekey_path: "{{ logstash_ssl_key_file }}"
        csr_path: "{{ logstash_ssl_cert_file | dirname }}/logstash.csr"
        provider: selfsigned
      delegate_to: localhost

    - name: ssl | copy SSL key and cert for logstash-forwarder.
      copy:
        src: "{{ item }}"
        dest: "{{ logstash_ssl_path }}/{{ item | basename }}"
        mode: 0644
      with_items:
        - "{{ logstash_ssl_key_file }}"
        - "{{ logstash_ssl_cert_file }}"
      notify:
        - restart logstash
  when: logstash_force_ssl or stat_result.stat.exists == false
